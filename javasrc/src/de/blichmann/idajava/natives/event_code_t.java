/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.blichmann.idajava.natives;

public enum event_code_t {
  byte_patched,
  cmt_changed,
  ti_changed,
  op_ti_changed,
  op_type_changed,
  enum_created,
  enum_deleted,
  enum_bf_changed,
  enum_renamed,
  enum_cmt_changed,
  enum_member_created,
  enum_member_deleted,
  struc_created,
  struc_deleted,
  struc_renamed,
  struc_expanded,
  struc_cmt_changed,
  struc_member_created,
  struc_member_deleted,
  struc_member_renamed,
  struc_member_changed,
  thunk_func_created,
  func_tail_appended,
  func_tail_removed,
  tail_owner_changed,
  func_noret_changed,
  segm_added,
  segm_deleted,
  segm_start_changed,
  segm_end_changed,
  segm_moved,
  area_cmt_changed,
  changing_cmt,
  changing_ti,
  changing_op_ti,
  changing_op_type,
  deleting_enum,
  changing_enum_bf,
  renaming_enum,
  changing_enum_cmt,
  deleting_enum_member,
  deleting_struc,
  renaming_struc,
  expanding_struc,
  changing_struc_cmt,
  deleting_struc_member,
  renaming_struc_member,
  changing_struc_member,
  removing_func_tail,
  deleting_segm,
  changing_segm_start,
  changing_segm_end,
  changing_area_cmt;

  public final int swigValue() {
    return swigValue;
  }

  public static event_code_t swigToEnum(int swigValue) {
    event_code_t[] swigValues = event_code_t.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (event_code_t swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + event_code_t.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private event_code_t() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private event_code_t(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private event_code_t(event_code_t swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

